From 33762c9b858c3b296688f7adb5418105292c18bd Mon Sep 17 00:00:00 2001
From: Michael Allwright <allsey87@gmail.com>
Date: Wed, 28 Apr 2021 14:27:47 +0200
Subject: [PATCH 1/2] pca953x: Add debugging information

---
 drivers/gpio/gpio-pca953x.c | 26 ++++++++++++++++++++++++--
 1 file changed, 24 insertions(+), 2 deletions(-)

diff --git a/drivers/gpio/gpio-pca953x.c b/drivers/gpio/gpio-pca953x.c
index 96d42f571a18..b7ee020a028a 100644
--- a/drivers/gpio/gpio-pca953x.c
+++ b/drivers/gpio/gpio-pca953x.c
@@ -371,6 +371,12 @@ static int pca953x_gpio_direction_input(struct gpio_chip *gc, unsigned off)
 	mutex_lock(&chip->i2c_lock);
 	ret = regmap_write_bits(chip->regmap, dirreg, bit, bit);
 	mutex_unlock(&chip->i2c_lock);
+	if (ret) {
+		dev_err(&chip->client->dev, "failed setting direction of bit %x to input: %d\n", off, ret);
+	}
+	else {
+		dev_info(&chip->client->dev, "set direction of bit %x to input\n", off);
+	}
 	return ret;
 }
 
@@ -388,11 +394,22 @@ static int pca953x_gpio_direction_output(struct gpio_chip *gc,
 	mutex_lock(&chip->i2c_lock);
 	/* set output level */
 	ret = regmap_write_bits(chip->regmap, outreg, bit, val ? bit : 0);
-	if (ret)
+	if (ret) {
+		dev_err(&chip->client->dev, "failed setting bit %x to %x: %d\n", off, val, ret);
 		goto exit;
+	}
+	else {
+		dev_info(&chip->client->dev, "set bit %x to %x\n", off, val);
+	}
 
 	/* then direction */
 	ret = regmap_write_bits(chip->regmap, dirreg, bit, 0);
+	if (ret) {
+		dev_err(&chip->client->dev, "failed setting direction of bit %x to output: %d\n", off, ret);
+	}
+	else {
+		dev_info(&chip->client->dev, "set direction of bit %x to output\n", off);
+	}
 exit:
 	mutex_unlock(&chip->i2c_lock);
 	return ret;
@@ -427,10 +444,15 @@ static void pca953x_gpio_set_value(struct gpio_chip *gc, unsigned off, int val)
 	u8 outreg = pca953x_recalc_addr(chip, chip->regs->output, off,
 					true, false);
 	u8 bit = BIT(off % BANK_SZ);
+	int ret;
 
 	mutex_lock(&chip->i2c_lock);
-	regmap_write_bits(chip->regmap, outreg, bit, val ? bit : 0);
+	ret = regmap_write_bits(chip->regmap, outreg, bit, val ? bit : 0);
 	mutex_unlock(&chip->i2c_lock);
+	if (ret < 0)
+		dev_err(&chip->client->dev, "failed setting bit %x to %x: %d\n", off, val, ret);
+	else
+		dev_info(&chip->client->dev, "set bit %x to %x\n", off, val);
 }
 
 static int pca953x_gpio_get_direction(struct gpio_chip *gc, unsigned off)
-- 
2.17.1

